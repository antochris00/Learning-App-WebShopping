{"version":3,"sources":["./src/app/views/profile/profile.component.html","./src/app/shared/profile/profile.service.ts","./src/app/views/profile/profile-routing.module.ts","./src/app/views/profile/profile.component.scss","./src/app/views/profile/profile.component.ts","./src/app/views/profile/profile.module.ts"],"names":[],"mappings":"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","file":"views-profile-profile-module.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\r\\n  <h1>Edit Profile</h1>\\r\\n  <hr>\\r\\n<div class=\\\"row\\\">\\r\\n    <!-- left column -->\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <img [src]='checkImage(profilePic)' class=\\\"avatar img-circle profileImg\\\" alt=\\\"avatar\\\">\\r\\n        <h6>Upload a different photo...</h6>\\r\\n        <input type=\\\"file\\\" (change)=\\\"handleFileUpdate($event.target.files)\\\">\\r\\n        <br/>\\r\\n        <hr/>\\r\\n        <br/>\\r\\n        <label>Employee ID : </label><label> <strong>{{empId}}</strong></label><br/>\\r\\n        <label>Designation : </label><label> <strong>{{designation}}</strong></label>\\r\\n        <br/>\\r\\n        <hr/>\\r\\n        <br/>\\r\\n        <label>Update Password</label>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div style=\\\"width: 100%;\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Old Password\\\" name=\\\"lname\\\" [(ngModel)] = \\\"oldPassword\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <ngx-loading [show]=\\\"passwordLoading\\\"></ngx-loading>\\r\\n          <input type=\\\"password\\\" [(ngModel)]=\\\"newPassword\\\" id=\\\"input1-group2\\\" name=\\\"input1-group2\\\" class=\\\"form-control\\\" placeholder=\\\"New Password\\\">\\r\\n          <span class=\\\"input-group-prepend\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updatePassword()\\\"><i class=\\\"fa fa-lock\\\"></i></button>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- edit form column -->\\r\\n    <div class=\\\"col-md-9 personal-info\\\">\\r\\n      <ngx-loading [show]=\\\"loading\\\"></ngx-loading>\\r\\n      <alert class=\\\"p-4 text-center\\\"></alert>\\r\\n      <h3>Personal info</h3>\\r\\n      <form class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-lg-3 control-label\\\">First name:</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"First Name\\\" name=\\\"fname\\\" [(ngModel)] = 'firstName'>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-lg-3 control-label\\\">Last name:</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Last Name\\\" name=\\\"lname\\\" [(ngModel)] = 'lastName'>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-lg-3 control-label\\\">Email:</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Email-ID\\\" name=\\\"email\\\" [(ngModel)] = 'email'>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-lg-3 control-label\\\">Mobile:</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Mobile\\\" name=\\\"mobile\\\" [(ngModel)] = 'mobile'>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-md-3 control-label\\\"></label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <button class=\\\"btn btn-primary float-right\\\" (click) = \\\"save()\\\">\\r\\n              <i class=\\\"fa fa-save\\\"></i><span> Save Changes</span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n<hr>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n  updateEmployeeEndpoint = \"/secure/admin/employee/updateEmployee\";\r\n  updateEmployeePasswordEndpoint = \"/secure/admin/employee/employeePasswordUpdate\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  updateEmployee(file, id, firstName, lastName, email, mobile): Observable<any>{\r\n    const uploadData = new FormData();\r\n    if(file=== undefined){\r\n      file=null;\r\n    }\r\n    uploadData.append('myFile', file);\r\n    uploadData.append('id', id);\r\n    uploadData.append('firstName', firstName);\r\n    uploadData.append('lastName', lastName);\r\n    uploadData.append('emailId', email);\r\n    uploadData.append('mobile', mobile);\r\n    return this.http.put(environment.backendBaseUrl+this.updateEmployeeEndpoint, uploadData);\r\n  }\r\n\r\n  updatePassword(oldPass, newPass){\r\n    const uploadData = new FormData();\r\n    uploadData.append('oldPassword', oldPass);\r\n    uploadData.append('newPassword', newPass);\r\n    return this.http.put(environment.backendBaseUrl+this.updateEmployeePasswordEndpoint, uploadData);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfileComponent } from './profile.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Profile'\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'profile'\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent,\r\n        data: {\r\n          title: 'Manage Profile'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule {}\r\n","export default \".profileImg {\\n  height: 100px;\\n  width: inherit;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcHJvZmlsZS9DOlxcVXNlcnNcXEFETUlOU1xcRGVza3RvcFxcUHJvamVjdDFcXG9jdFxcTGVhcm5pbmctQXBwLVdlYlNob3BwaW5nXFxhZG1pbi11aS9zcmNcXGFwcFxcdmlld3NcXHByb2ZpbGVcXHByb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxjQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHJvZmlsZUltZ3tcclxuICBoZWlnaHQ6IDEwMHB4O1xyXG4gIHdpZHRoOiBpbmhlcml0O1xyXG59XHJcbiIsIi5wcm9maWxlSW1nIHtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgd2lkdGg6IGluaGVyaXQ7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from '../../shared/_alert';\r\nimport { UserStoreService } from '../../service/userStore/user-store.service';\r\nimport { ProfileService } from '../../shared/profile/profile.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { TenantStoreService } from '../../service/tenantStore/tenant-store.service';\r\ndeclare var rsaencrypt: Function;\r\n\r\n@Component({\r\n  templateUrl: 'profile.component.html',\r\n  styleUrls: ['profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  loading = false;\r\n  passwordLoading = false;\r\n  alertoptions = {\r\n    autoClose: false,\r\n    keepAfterRouteChange: false\r\n  };\r\n\r\n  defaultAvatar = \"assets/img/avatars/Blank-Profile.png\";\r\n  userInfo: any;\r\n\r\n  firstName:string;\r\n  lastName:string;\r\n  email:string;\r\n  mobile:number;\r\n  designation:string;\r\n  door: string;\r\n  street: string;\r\n  city: string;\r\n  state: string;\r\n  pincode: string;\r\n  empId: number;\r\n  fileToUpdate: File;\r\n  profilePic: string;\r\n\r\n  oldPassword: string;\r\n  newPassword: string;\r\n\r\n  constructor(private userStore: UserStoreService,\r\n              private tenantStore: TenantStoreService,\r\n              private alertService: AlertService,\r\n              private profileService: ProfileService,\r\n              private sanitizer: DomSanitizer){\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userInfo = this.userStore;\r\n    this.empId = this.userStore.userId;\r\n    this.firstName = this.userStore.firstName;\r\n    this.lastName = this.userStore.lastName;\r\n    this.email = this.userStore.emailId;\r\n    this.designation = this.userStore.designation;\r\n    this.mobile = this.userStore.mobile;\r\n    this.profilePic = this.userStore.profilePic;\r\n    let address:any[] = this.userStore.employeeAddress;\r\n  }\r\n\r\n  checkImage(image){\r\n    if(image === undefined || image === null){\r\n      return this.defaultAvatar;\r\n    }\r\n    else{\r\n      return this.sanitizer.bypassSecurityTrustUrl(image);;\r\n    }\r\n  }\r\n\r\n  handleFileUpdate(files: FileList) {\r\n    this.profilePic = URL.createObjectURL(files.item(0));\r\n    this.fileToUpdate = files.item(0);\r\n  }\r\n\r\n  save(){\r\n    this.loading = true;\r\n    this.profileService.updateEmployee(this.fileToUpdate, this.empId, this.firstName, this.lastName, this.email, this.mobile)\r\n                       .subscribe((resp:any) => {\r\n                         if(resp.statusCode === 200){\r\n                          this.alertService.success('Updatde Successfully', this.alertoptions);\r\n                          this.userStore.profilePic = resp.data.profilePic;\r\n                         }\r\n                         else{\r\n                          this.alertService.error('Failed : ' + resp.errorMessages, this.alertoptions);\r\n                         }\r\n                         this.loading=false;\r\n                       },\r\n                       (error) => {\r\n                         this.alertService.error('Something went wrong', this.alertoptions);\r\n                         this.loading=false;\r\n                       });\r\n  }\r\n\r\n  updatePassword(){\r\n    this.passwordLoading = true;\r\n    this.profileService.updatePassword(rsaencrypt(this.oldPassword, this.tenantStore.publicKey), rsaencrypt(this.newPassword, this.tenantStore.publicKey))\r\n                        .subscribe((resp:any) => {\r\n                          if(resp.statusCode === 200){\r\n                          this.alertService.success('Updatde Successfully', this.alertoptions);\r\n                          this.userStore.profilePic = resp.data.profilePic;\r\n                          }\r\n                          else{\r\n                          this.alertService.error('Failed : ' + resp.errorMessages, this.alertoptions);\r\n                          }\r\n                          this.passwordLoading=false;\r\n                        },\r\n                        (error) => {\r\n                          this.alertService.error('Something went wrong', this.alertoptions);\r\n                          this.passwordLoading=false;\r\n                        });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { AlertModule } from '../../shared/_alert/alert.module';\r\n// Material modules\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { NgxTypeaheadModule } from 'ngx-typeahead';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfileComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxTypeaheadModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.rectangleBounce,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.3)',\r\n      backdropBorderRadius: '4px',\r\n      primaryColour: 'cornflowerblue',\r\n      secondaryColour: 'chocolate',\r\n      tertiaryColour: 'darkred'\r\n    }),\r\n    SharedModule,\r\n    CarouselModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    AlertModule\r\n  ]\r\n})\r\nexport class ProfileModule { }\r\n"],"sourceRoot":"webpack:///"}