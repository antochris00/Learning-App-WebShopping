{"version":3,"sources":["./src/app/views/pos/pos.component.html","./src/app/shared/pos/posProduct.ts","./src/app/views/pos/pos-routing.module.ts","./src/app/views/pos/pos.component.scss","./src/app/views/pos/pos.component.ts","./src/app/views/pos/pos.module.ts"],"names":[],"mappings":"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","file":"views-pos-pos-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-money\\\"></i>Point Of Sale (POS) - Billing\\n          <!--remove later-->\\n          <!-- <strong>Status: {{status}}</strong> -->\\n          <div class=\\\"float-right\\\">\\n              <button (click)=\\\"requestUsb()\\\">Connect to USB</button>\\n          </div>\\n          <!-- <div class=\\\"float-right\\\">\\n              <button (click)=\\\"print()\\\" [disabled]=\\\"status === false\\\"> Print!</button>\\n          </div> -->\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" matInput placeholder=\\\"Customer Mobile\\\" id=\\\"customernumber\\\" name=\\\"customernumber\\\" [(ngModel)]=\\\"customerMobile\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n            <label>Customer Name : </label>\\n            <br/>\\n            <label>Customer Email : </label>\\n            <br/>\\n            <label>Loyalty Points : </label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <barcode-scanner-livestream\\n            type=\\\"code_128\\\"\\n            (valueChanges)=\\\"onValueChanges($event)\\\"\\n            (started)=\\\"(onStarted($event))\\\"\\n          ></barcode-scanner-livestream>\\n          <div [hidden]=\\\"!barcodeValue\\\">\\n            {{ barcodeValue }}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <ngx-loading [show]=\\\"loading\\\"></ngx-loading>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\">\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th>SL.NO</th>\\n                <th>Item Name</th>\\n                <th>Item Code</th>\\n                <th>MRP</th>\\n                <th>QUANTITY</th>\\n                <th>DISCONT</th>\\n                <th>TOTAL</th>\\n              </tr>\\n            </thead>\\n            <tbody style=\\\"background: white;\\\">\\n              <tr *ngFor=\\\"let item of itemList; let i = index\\\">\\n                <td>{{i+1}}</td>\\n                <td><input type=\\\"text\\\" class=\\\"form-control\\\" matInput placeholder=\\\"Product Name\\\" id=\\\"pname-{{i}}\\\" name=\\\"pname-{{i}}\\\" [(ngModel)]=\\\"item.itemName\\\"></td>\\n                <td><input type=\\\"text\\\" class=\\\"form-control\\\" matInput placeholder=\\\"Product Code\\\" id=\\\"pcode-{{i}}\\\" name=\\\"pcode-{{i}}\\\" [(ngModel)]=\\\"item.itemCode\\\"></td>\\n                <td><input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"width: 50%;\\\" matInput placeholder=\\\"MRP\\\" id=\\\"mrp-{{i}}\\\" name=\\\"mrp-{{i}}\\\" [(ngModel)]=\\\"item.mrp\\\"></td>\\n                <td><input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"width: 50%;\\\" matInput placeholder=\\\"Total Quantity\\\" id=\\\"q-{{i}}\\\" name=\\\"q-{{i}}\\\" [(ngModel)]=\\\"item.quantity\\\"></td>\\n                <td><input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"width: 50%;\\\" matInput placeholder=\\\"Discount\\\" id=\\\"dis-{{i}}\\\" name=\\\"dis-{{i}}\\\" [(ngModel)]=\\\"item.discount\\\"></td>\\n                <td>â‚¹-{{calculateTotal(item)}}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export class PosProduct{\r\n  itemName: string;\r\n  itemCode: string;\r\n  mrp: number;\r\n  quantity: number;\r\n  discount: number;\r\n  total: number;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PosComponent } from './pos.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Point Of Sale'\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'pos'\n      },\n      {\n        path: 'pos',\n        component: PosComponent,\n        data: {\n          title: 'Point Of Sale'\n        }\n      }\n    ]\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PosRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Bvcy9wb3MuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, HostListener, OnInit } from '@angular/core';\nimport { ViewChild, AfterViewInit } from \"@angular/core\";\nimport { BarecodeScannerLivestreamComponent } from \"ngx-barcode-scanner\";\nimport { PosProduct } from '../../shared/pos/posProduct';\nimport { PrintDriver } from 'ng-thermal-print/lib/drivers/PrintDriver';\nimport { PrintService, UsbDriver, WebPrintDriver } from 'ng-thermal-print';\nimport { ProductService } from '../../shared/product/product.service';\n\n@Component({\n  templateUrl: 'pos.component.html',\n  styleUrls: ['pos.component.scss']\n})\nexport class PosComponent implements OnInit {\n\n  loading = false;\n  itemList: PosProduct[] = new Array();\n  prod: PosProduct = new PosProduct();\n  customerMobile: number;\n  customerName: string;\n  customerEmail: string;\n\n  //Insert new entry incase of shift and enter key press\n  @HostListener('keydown', ['$event']) onKeyDown(e) {\n    if (e.keyCode == 13 && e.shiftKey ) {\n      let newProd:PosProduct = new PosProduct();\n      this.itemList.push(newProd);\n    }\n  }\n\n  constructor(private printService: PrintService, private productService: ProductService){\n    this.usbPrintDriver = new UsbDriver();\n        this.printService.isConnected.subscribe(result => {\n            this.status = result;\n            if (result) {\n                console.log('Connected to printer!!!');\n            } else {\n            console.log('Not connected to printer.');\n            }\n        });\n  }\n\n  ngOnInit(): void {\n    let newProd:PosProduct = new PosProduct();\n    this.itemList.push(newProd);\n  }\n\n  //PRINTER RELATED\n  status: boolean = false;\n  usbPrintDriver: UsbDriver;\n  webPrintDriver: WebPrintDriver;\n  ip: string = '';\n  requestUsb() {\n      this.usbPrintDriver.requestUsb().subscribe(result => {\n          this.printService.setDriver(this.usbPrintDriver, 'ESC/POS');\n      });\n  }\n  connectToWebPrint() {\n      this.webPrintDriver = new WebPrintDriver(this.ip);\n      this.printService.setDriver(this.webPrintDriver, 'WebPRNT');\n  }\n  print(driver: PrintDriver) {\n      this.printService.init()\n          .setBold(true)\n          .writeLine('Hello World!')\n          .setBold(false)\n          .feed(4)\n          .cut('full')\n          .flush();\n  }\n\n  //CAMERA BARCODE SCANNER\n  @ViewChild(BarecodeScannerLivestreamComponent)\n  barecodeScanner: BarecodeScannerLivestreamComponent;\n  barcodeValue: string = '';\n  ngAfterViewInit() {\n    this.barecodeScanner.start();\n  }\n  onValueChanges(result) {\n    if(this.barcodeValue != result.codeResult.code){\n      this.barcodeValue = result.codeResult.code;\n      this.getProductFromCode(result.codeResult.code);\n    }\n\n  }\n  onStarted(started) {\n    console.log(\"Camera Active = \",started);\n  }\n\n  //PRODUCT APP LOGIC\n  getProductFromCode(code){\n    this.loading = true;\n    this.productService.getPoductByCode(code)\n                        .subscribe((resp: any) => {\n                          let newProd:PosProduct;\n                          let doPush = false;\n                          if(this.isLastItemEmpty()){\n                            newProd = this.itemList[this.itemList.length - 1];\n                          }\n                          else{\n                            newProd = new PosProduct();\n                            doPush = true;\n                          }\n                          newProd.itemName = resp.data.productName;\n                          newProd.mrp = resp.data.cost;\n                          newProd.discount = resp.data.offer;\n                          newProd.itemCode = resp.data.productCode;\n                          if(doPush){\n                            this.itemList.push(newProd);\n                          }\n                          this.loading = false;\n                        },\n                        (error) => {\n                          alert(error);\n                          this.loading = false;\n                       });\n  }\n\n  isLastItemEmpty(){\n    let prod: PosProduct = this.itemList[this.itemList.length-1];\n    if(prod.itemName === '' || prod.itemName === null || prod.itemName === undefined){\n      return true;\n    }\n    return false;\n  }\n\n  calculateTotal(item: PosProduct): number{\n    item.total = item.mrp * item.quantity;\n    return item.total;\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { AlertModule } from '../../shared/_alert/alert.module';\r\n// Material modules\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { NgxTypeaheadModule } from 'ngx-typeahead';\r\nimport { PosComponent } from './pos.component';\r\nimport { PosRoutingModule } from './pos-routing.module';\r\nimport { ThermalPrintModule } from 'ng-thermal-print';\r\nimport { BarecodeScannerLivestreamModule } from 'ngx-barcode-scanner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PosComponent\r\n  ],\r\n  imports: [\r\n    PosRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxTypeaheadModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.rectangleBounce,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.3)',\r\n      backdropBorderRadius: '4px',\r\n      primaryColour: 'cornflowerblue',\r\n      secondaryColour: 'chocolate',\r\n      tertiaryColour: 'darkred'\r\n    }),\r\n    SharedModule,\r\n    CarouselModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    AlertModule,\r\n    ThermalPrintModule,\r\n    BarecodeScannerLivestreamModule\r\n  ]\r\n})\r\nexport class PosModule { }\r\n"],"sourceRoot":"webpack:///"}