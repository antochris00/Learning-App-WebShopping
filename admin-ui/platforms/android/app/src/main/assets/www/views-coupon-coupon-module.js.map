{"version":3,"sources":["./src/app/views/coupon/coupon.component.html","./src/app/views/coupon/create-coupon/create-coupon.component.html","./src/app/shared/coupon/coupon.service.ts","./src/app/views/coupon/coupon-routing.module.ts","./src/app/views/coupon/coupon.component.ts","./src/app/views/coupon/coupon.module.ts","./src/app/views/coupon/create-coupon/create-coupon.component.css","./src/app/views/coupon/create-coupon/create-coupon.component.ts"],"names":[],"mappings":"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","file":"views-coupon-coupon-module.js","sourcesContent":["export default \"<alert class=\\\"p-4 text-center\\\"></alert>\\r\\n<ngx-loading [show]=\\\"loading\\\"></ngx-loading>\\r\\n<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-ticket\\\"></i>Manage Coupons\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div *ngIf=\\\"!showTable()\\\"> No Coupons to Display</div>\\r\\n            <table *ngIf=\\\"showTable()\\\" class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th>Title</th>\\r\\n                  <th>Code</th>\\r\\n                  <th>Discount</th>\\r\\n                  <th>Validity</th>\\r\\n                  <th>FreeShipping</th>\\r\\n                  <th>Per User Usage</th>\\r\\n                  <th>Actions</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let coupon of allCoupons\\\">\\r\\n                  <td>\\r\\n                    <div>{{coupon.title}}</div>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <div>{{coupon.code}}</div>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <div>{{coupon.discount}}</div>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <div>\\r\\n                      {{coupon.startDate | date: 'dd-MM-yyy' }} --- {{coupon.endDate | date: 'dd-MM-yyy'}}\\r\\n                    </div>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <div>\\r\\n                      {{coupon.freeShipping}}\\r\\n                    </div>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <div>\\r\\n                      {{coupon.perUserUsage}}\\r\\n                    </div>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <mat-slide-toggle color=\\\"primary\\\" [(ngModel)] = \\\"coupon.active\\\"></mat-slide-toggle>\\r\\n                    <button mat-button color=\\\"warn\\\" aria-label=\\\"remove\\\">\\r\\n                      <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\";","export default \"<alert class=\\\"p-4 text-center\\\"></alert>\\r\\n<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <ngx-loading [show]=\\\"loading\\\"></ngx-loading>\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-ticket\\\"></i>Create your Coupon\\r\\n          <button mat-button class=\\\"btn btn-ghost-success float-right\\\" style=\\\"border: 1px solid;\\\" (click)=\\\"createCoupon()\\\">\\r\\n            <i class=\\\"fa fa-gift\\\"></i> Create Coupon\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <table class=\\\"table table-responsive-sm\\\">\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                    <mat-label>Coupon Title</mat-label>\\r\\n                    <input matInput placeholder=\\\"Title\\\" [(ngModel)]=\\\"title\\\" required>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                    <mat-label>Coupon Code</mat-label>\\r\\n                    <input matInput placeholder=\\\"Code\\\" [(ngModel)]=\\\"code\\\" required>\\r\\n                    <mat-hint>Must be unique for active coupons</mat-hint>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                    <mat-label>Discount</mat-label>\\r\\n                    <input matInput type=\\\"number\\\" class=\\\"example-right-align\\\" [(ngModel)]=\\\"discount\\\" required>\\r\\n                    <span matPrefix>%&nbsp;</span>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                    <mat-label>PerUser Usage</mat-label>\\r\\n                    <input matInput type=\\\"number\\\" class=\\\"example-right-align\\\" [(ngModel)]=\\\"userUsage\\\" required>\\r\\n                    <mat-hint>Number of times user can apply this code</mat-hint>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                    <mat-label>Start Date</mat-label>\\r\\n                    <input matInput [min]=\\\"minDateToBegin\\\" [matDatepicker]=\\\"pickerBegin\\\" (dateChange)=\\\"setStartDate('change', $event)\\\" disabled>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"pickerBegin\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #pickerBegin disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                    <mat-label>End Date</mat-label>\\r\\n                    <input matInput [min]=\\\"minDateToEnd\\\" [matDatepicker]=\\\"pickerEnd\\\" (dateChange)=\\\"setEndDate('change', $event)\\\" disabled>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"pickerEnd\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #pickerEnd disabled={{!EndDateActive}}></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-slide-toggle\\r\\n                    color=\\\"primary\\\"\\r\\n                    [checked]=\\\"freeShipping\\\"\\r\\n                    (change)=\\\"toggleShipping()\\\">\\r\\n                    <button mat-button [disabled]=\\\"true\\\" style=\\\"text-align: inherit;\\\">\\r\\n                      <i class=\\\"fa fa-truck\\\"></i>\\r\\n                      <span class=\\\"icon-text\\\"> Free Shipping</span><br/>\\r\\n                    </button>\\r\\n                  </mat-slide-toggle>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CouponService {\r\n\r\n  createCouponEndpoint = \"/secure/admin/coupon/createCoupon\";\r\n  getCouponsEndpoint = \"/secure/admin/coupon/getAllCoupons\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllCoupons(): Observable<any>{\r\n    return this.http.get(environment.backendBaseUrl+this.getCouponsEndpoint);\r\n  }\r\n\r\n  createCoupon(title, code, startDate, endDate, active, discount,\r\n              freeShipping, userUsage): Observable<any>{\r\n    const body = {\r\n      title: title,\r\n      code: code,\r\n      discount: discount,\r\n      startDate: startDate,\r\n      endDate: endDate,\r\n      freeShipping: freeShipping,\r\n      perUserUsage: userUsage,\r\n      active: active\r\n    }\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post(environment.backendBaseUrl+this.createCouponEndpoint, body, httpOptions);\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CouponComponent } from './coupon.component';\r\nimport { CreateCouponComponent } from './create-coupon/create-coupon.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Coupons'\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'coupon'\r\n      },\r\n      {\r\n        path: 'coupon',\r\n        component: CouponComponent,\r\n        data: {\r\n          title: 'Manage Coupon'\r\n        }\r\n      },\r\n      {\r\n        path: 'createCoupon',\r\n        component: CreateCouponComponent,\r\n        data: {\r\n          title: 'Create Coupon'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CouponRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CouponService } from '../../shared/coupon/coupon.service';\r\nimport { AlertService } from '../../shared/_alert';\r\n\r\n@Component({\r\n  templateUrl: 'coupon.component.html'\r\n})\r\nexport class CouponComponent implements OnInit {\r\n\r\n  allCoupons:any[];\r\n  loading = false;\r\n\r\n  constructor(private coupService: CouponService, private alertService: AlertService) {\r\n\r\n  }\r\n\r\n  showTable(){\r\n    if(this.allCoupons != undefined && this.allCoupons != null && this.allCoupons.length>0)\r\n    {\r\n      return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.coupService.getAllCoupons()\r\n                    .subscribe((resp:any) => {\r\n                      this.allCoupons = resp.dataList;\r\n                      this.loading = false;\r\n                    },\r\n                    (error) => {\r\n                      this.alertService.error('Something went wrong... try again later!');\r\n                    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { AlertModule } from '../../shared/_alert/alert.module';\r\n// Material modules\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { CouponComponent } from './coupon.component';\r\nimport { CouponRoutingModule } from './coupon-routing.module';\r\nimport { CreateCouponComponent } from './create-coupon/create-coupon.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CouponComponent,\r\n    CreateCouponComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ChartsModule,\r\n    BsDropdownModule,\r\n    ButtonsModule.forRoot(),\r\n    CouponRoutingModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.rectangleBounce,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.3)',\r\n      backdropBorderRadius: '4px',\r\n      primaryColour: 'cornflowerblue',\r\n      secondaryColour: 'chocolate',\r\n      tertiaryColour: 'darkred'\r\n    }),\r\n    SharedModule,\r\n    AlertModule\r\n  ]\r\n})\r\nexport class CouponModule { }\r\n","export default \".table th, .table td {\\r\\n  border-top: 0px !important;\\r\\n}\\r\\n\\r\\n.matitem{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.with-icon {\\r\\n  color: cadetblue;\\r\\n}\\r\\n\\r\\n.icon-text{\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvY291cG9uL2NyZWF0ZS1jb3Vwb24vY3JlYXRlLWNvdXBvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvY291cG9uL2NyZWF0ZS1jb3Vwb24vY3JlYXRlLWNvdXBvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYmxlIHRoLCAudGFibGUgdGQge1xyXG4gIGJvcmRlci10b3A6IDBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubWF0aXRlbXtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLndpdGgtaWNvbiB7XHJcbiAgY29sb3I6IGNhZGV0Ymx1ZTtcclxufVxyXG5cclxuLmljb24tdGV4dHtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuIl19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { CouponService } from '../../../shared/coupon/coupon.service';\r\nimport { AlertService } from '../../../shared/_alert';\r\n\r\n@Component({\r\n  selector: 'app-create-coupon',\r\n  templateUrl: './create-coupon.component.html',\r\n  styleUrls: ['./create-coupon.component.css']\r\n})\r\nexport class CreateCouponComponent implements OnInit {\r\n\r\n  loading = false;\r\n\r\n  minDateToBegin: Date;\r\n  maxDateToBegin: Date;\r\n\r\n  minDateToEnd: Date;\r\n  maxDateToEnd: Date;\r\n  EndDateActive = false;\r\n\r\n  active=true;\r\n  freeShipping = false;\r\n  title:string;\r\n  code:string;\r\n  discount:number;\r\n  userUsage:number\r\n  startDate:Date;\r\n  endDate:Date;\r\n\r\n  constructor(private coupService: CouponService, private alertService: AlertService) {\r\n    this.minDateToBegin = new Date();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  setStartDate(type: string, event: MatDatepickerInputEvent<Date>){\r\n    this.startDate = event.value;\r\n\r\n    this.minDateToEnd = event.value;\r\n    this.EndDateActive = true;\r\n  }\r\n\r\n  setEndDate(type: string, event: MatDatepickerInputEvent<Date>){\r\n    this.endDate = event.value;\r\n  }\r\n\r\n  toggleShipping(){\r\n    this.freeShipping = !this.freeShipping;\r\n  }\r\n\r\n  createCoupon(){\r\n    this.loading = true;\r\n    this.coupService.createCoupon(this.title, this.code, this.startDate,\r\n                    this.endDate, this.active, this.discount, this.freeShipping, this.userUsage)\r\n                    .subscribe((resp:any) => {\r\n                      if(resp.statusCode === 200){\r\n                        this.alertService.success('Coupon created successfully');\r\n                        // this.reset();\r\n                      }\r\n                      else{\r\n                        this.alertService.warn('Error : ' + resp.errorMessages);\r\n                      }\r\n                      this.loading = false;\r\n                    },\r\n                    (error:any)=>{\r\n                      this.alertService.error('Something went wrong... try again later!');\r\n                      this.loading = false;\r\n                    });\r\n  }\r\n\r\n  reset(){\r\n    this.freeShipping = false;\r\n    this.title = '';\r\n    this.code = '';\r\n    this.discount = 0;\r\n    this.userUsage = 0;\r\n    this.endDate = null;\r\n    this.startDate = null;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}