{"version":3,"sources":["./src/app/views/product/category/category.component.html","./src/app/views/product/manage-products/manage-product/manage-product.component.html","./src/app/views/product/product-list/product-list.component.html","./src/app/shared/collapse/collapse.directive.ts","./src/app/shared/collapse/collapse.module.ts","./src/app/shared/collapse/index.ts","./src/app/views/product/category/category.component.css","./src/app/views/product/category/category.component.ts","./src/app/views/product/manage-products/manage-product/manage-product.component.css","./src/app/views/product/manage-products/manage-product/manage-product.component.ts","./src/app/views/product/product-list/product-list.component.css","./src/app/views/product/product-list/product-list.component.ts","./src/app/views/product/product-routing.module.ts","./src/app/views/product/product.module.ts"],"names":[],"mappings":"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","file":"views-product-product-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <ngx-loading [show]=\\\"loading\\\"></ngx-loading>\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-list-ul\\\"></i>Manage Category\\r\\n          <div class=\\\"float-right\\\">\\r\\n            <button mat-button class=\\\"btn btn-ghost-danger\\\" style=\\\"border: 1px solid;\\\" (click)=\\\"deleteCategory()\\\">\\r\\n              <i class=\\\"fa fa-remove\\\"></i> Delete Selected\\r\\n            </button>\\r\\n          </div>\\r\\n          <br/>\\r\\n          <i class=\\\"fa fa-warning float-left warningmsg\\\"> Products under deleted category will be deactivated post mid night</i>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\r\\n            <!-- in case of leaf nodes with no children -->\\r\\n            <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding>\\r\\n              <button mat-icon-button disabled></button>\\r\\n              <mat-checkbox color=\\\"warn\\\" class=\\\"checklist-leaf-node\\\" matTooltip=\\\"{{node.catId}}\\\" matTooltipPosition=\\\"right\\\"\\r\\n                            [checked]=\\\"checklistSelection.isSelected(node)\\\"\\r\\n                            (change)=\\\"LeafItemSelectionToggle(node)\\\">{{node.catName}}\\r\\n                          </mat-checkbox>\\r\\n              <button mat-icon-button class=\\\"addButton\\\" (click)=\\\"addNewItem(node)\\\"><mat-icon class=\\\"icon-paddding\\\">add</mat-icon></button>\\r\\n            </mat-tree-node>\\r\\n            <!-- to save element to parent -->\\r\\n            <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasNoContent\\\" matTreeNodePadding>\\r\\n              <button mat-icon-button disabled></button>\\r\\n              <mat-form-field>\\r\\n                <mat-label>New Category...</mat-label>\\r\\n                <input matInput #itemValue placeholder=\\\"Category Name\\\">\\r\\n              </mat-form-field>\\r\\n              <button mat-button (click)=\\\"saveNode(node, itemValue.value)\\\">Save</button>\\r\\n            </mat-tree-node>\\r\\n            <!-- in case of nodes with children act as parent -->\\r\\n            <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\r\\n              <button class=\\\"dropButton\\\" matTreeNodeToggle\\r\\n                      [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\r\\n                <mat-icon class=\\\"mat-icon-rtl-mirror icon-paddding\\\" [style.visibility]=\\\"showExpand(node)\\\">\\r\\n                  {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n                </mat-icon>\\r\\n              </button>\\r\\n              <mat-checkbox color=\\\"warn\\\" [checked]=\\\"descendantsAllSelected(node)\\\" matTooltip=\\\"{{node.catId}}\\\" matTooltipPosition=\\\"right\\\"\\r\\n                            [indeterminate]=\\\"descendantsPartiallySelected(node)\\\"\\r\\n                            (change)=\\\"ItemSelectionToggle(node)\\\">{{node.catName}}</mat-checkbox>\\r\\n              <button mat-icon-button class=\\\"addButton\\\" (click)=\\\"addNewItem(node)\\\"><mat-icon class=\\\"icon-paddding\\\">add</mat-icon></button>\\r\\n            </mat-tree-node>\\r\\n          </mat-tree>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <ngx-loading [show]=\\\"loading\\\"></ngx-loading>\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-plus-square-o\\\"></i>Add New Category\\r\\n          <div class=\\\"float-right\\\">\\r\\n            <button mat-button class=\\\"btn btn-ghost-success\\\" style=\\\"border: 1px solid;\\\" (click)=\\\"createCategory()\\\">\\r\\n              <i class=\\\"fa fa-plus-square-o\\\"></i> Create Category\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"matitem\\\" style=\\\"width: 100%;\\\">\\r\\n            <mat-label>Category Name</mat-label>\\r\\n            <input matInput placeholder=\\\"Category Name\\\" [(ngModel)]=\\\"catName\\\" required>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"matitem\\\" style=\\\"width: 100%;\\\">\\r\\n            <mat-label>Parent Category ID</mat-label>\\r\\n            <input matInput type=\\\"number\\\" placeholder=\\\"ParentId / Empty if Base Category\\\" [(ngModel)]=\\\"parentId\\\" >\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <ngx-loading [show]=\\\"loading\\\"></ngx-loading>\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-plus-square-o\\\"></i>Edit Existing Category\\r\\n          <div class=\\\"float-right\\\">\\r\\n            <button mat-button class=\\\"btn btn-ghost-primary\\\" style=\\\"border: 1px solid;\\\" (click)=\\\"editCategory()\\\">\\r\\n              <i class=\\\"fa fa-edit\\\"></i> Confirm Edit\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"matitem\\\" style=\\\"width: 100%;\\\">\\r\\n            <mat-label>Category ID</mat-label>\\r\\n            <input matInput type=\\\"number\\\" placeholder=\\\"Category ID\\\" [(ngModel)]=\\\"editCatId\\\" required>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"matitem\\\" style=\\\"width: 100%;\\\">\\r\\n            <mat-label>Edited Category Name</mat-label>\\r\\n            <input matInput placeholder=\\\"Category Name\\\" [(ngModel)]=\\\"editCatName\\\" required>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <alert class=\\\"p-4 text-center\\\"></alert>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <ngx-loading [show]=\\\"loading\\\"></ngx-loading>\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-list-ul\\\"></i>Add Product\\r\\n          <div class=\\\"float-right\\\">\\r\\n            <button mat-button class=\\\"btn btn-ghost-primary\\\" style=\\\"border: 1px solid;\\\" (click)=\\\"createProduct()\\\">\\r\\n              <i class=\\\"fa fa-product-hunt\\\"></i> Create Product\\r\\n            </button>\\r\\n          </div>\\r\\n          <br/>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"table table-responsive-sm\\\">\\r\\n            <tr>\\r\\n              <td>\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                  <!-- <mat-label>Category ID</mat-label>\\r\\n                  <input matInput placeholder=\\\"Category of the Product\\\" [(ngModel)]=\\\"categoryId\\\" required> -->\\r\\n                  <mat-label>Category ID</mat-label>\\r\\n                  <input type=\\\"text\\\"\\r\\n                             placeholder=\\\"Search Based Category Name\\\"\\r\\n                             matInput\\r\\n                             [formControl]=\\\"myControl\\\"\\r\\n                             [matAutocomplete]=\\\"auto\\\"\\r\\n                             [ngModel]=\\\"searchCategory\\\" required>\\r\\n                      <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\" >\\r\\n                        <mat-option (onSelectionChange)=\\\"setCategory(option)\\\" *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option.firstName+' '+option.lastName\\\">\\r\\n                          {{option.categoryName}} - {{option.categoryId}}\\r\\n                        </mat-option>\\r\\n                  </mat-autocomplete>\\r\\n                </mat-form-field>\\r\\n              </td>\\r\\n              <td>\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                  <mat-label>Product Name</mat-label>\\r\\n                  <input matInput placeholder=\\\"Product Name\\\" [(ngModel)]=\\\"pName\\\" required>\\r\\n                </mat-form-field>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                  <mat-label>Product Brand</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" class=\\\"example-right-align\\\" [(ngModel)]=\\\"brand\\\" required>\\r\\n                </mat-form-field>\\r\\n              </td>\\r\\n              <td>\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                  <mat-label>Product Cost</mat-label>\\r\\n                  <input matInput type=\\\"number\\\" class=\\\"example-right-align\\\" [(ngModel)]=\\\"cost\\\" required>\\r\\n                  <mat-hint>Product MRP</mat-hint>\\r\\n                </mat-form-field>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                  <mat-label>Product Offer</mat-label>\\r\\n                  <input matInput type=\\\"number\\\" class=\\\"example-right-align\\\" [(ngModel)]=\\\"offer\\\" required>\\r\\n                  <mat-hint>Offer applicable to this particular product</mat-hint>\\r\\n                </mat-form-field>\\r\\n              </td>\\r\\n              <td>\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                  <mat-label>Product CODE</mat-label>\\r\\n                  <input matInput placeholder=\\\"Product BAR/QR CODE\\\" [(ngModel)]=\\\"pCode\\\" required>\\r\\n                </mat-form-field>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                  <mat-label>Units In Stock</mat-label>\\r\\n                  <input matInput type=\\\"number\\\" class=\\\"example-right-align\\\" [(ngModel)]=\\\"unitsInStock\\\" required>\\r\\n                  <mat-hint>Current Product Quantity In Stock</mat-hint>\\r\\n                </mat-form-field>\\r\\n              </td>\\r\\n              <td>\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"matitem\\\">\\r\\n                  <mat-label>Product Description</mat-label>\\r\\n                  <textarea rows=\\\"3\\\" matInput type=\\\"text\\\" class=\\\"example-right-align\\\" [(ngModel)]=\\\"pDescription\\\" required></textarea>\\r\\n                </mat-form-field>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <button mat-button [disabled]=\\\"true\\\" style=\\\"text-align: inherit;\\\">\\r\\n                  <i class=\\\"fa fa-product-hunt\\\"></i>\\r\\n                  <span class=\\\"icon-text\\\"> Activate product</span><br/>\\r\\n                </button>\\r\\n                <mat-slide-toggle\\r\\n                  color=\\\"accent\\\"\\r\\n                  [checked]=\\\"productActive\\\"\\r\\n                  (change)=\\\"toggleProductActive()\\\">\\r\\n                </mat-slide-toggle>\\r\\n              </td>\\r\\n              <td>\\r\\n                <img [src]='checkImage(productPic)' class=\\\"avatar profileImg\\\" alt=\\\"avatar\\\">\\r\\n                <br/>\\r\\n                <mat-hint>(Multiple Images can be uploaded as a ZIP file)</mat-hint>\\r\\n                <br/>\\r\\n                <input type=\\\"file\\\" (change)=\\\"handleFileUpdate($event.target.files)\\\">\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <ngx-loading [show]=\\\"filterloading\\\"></ngx-loading>\\r\\n        <!-- <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-filter\\\"></i>Filters\\r\\n        </div> -->\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"table table-responsive-sm filterbar\\\">\\r\\n            <tr>\\r\\n              <td>\\r\\n                <form [formGroup]=\\\"myForm\\\" *ngIf=\\\"!searchByProduts\\\">\\r\\n                  <ng-multiselect-dropdown\\r\\n                      name=\\\"category\\\"\\r\\n                      [placeholder]=\\\"'Select Category'\\\"\\r\\n                      [data]=\\\"categories\\\"\\r\\n                      formControlName=\\\"category\\\"\\r\\n                      [disabled]=\\\"disabled\\\"\\r\\n                      [settings]=\\\"dropdownSettings\\\"\\r\\n                      (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n                      (onDeSelect)=\\\"onDeSelect($event)\\\"\\r\\n                      (onSelectAll)=\\\"onSelectAll($event)\\\"\\r\\n                      (onDeSelectAll)=\\\"onDeSelectAll($event)\\\">\\r\\n                  </ng-multiselect-dropdown>\\r\\n                </form>\\r\\n                <mat-checkbox [(ngModel)]=\\\"loadActiveItemsOnly\\\" (change)=\\\"loadActiveItems()\\\">\\r\\n                  Active Products only\\r\\n                </mat-checkbox>\\r\\n                <i class=\\\"fa fa-exchange\\\" (click)=\\\"searchByProduts = !searchByProduts\\\" style=\\\"cursor: pointer;\\\"></i>\\r\\n              </td>\\r\\n              <td>\\r\\n                <div class=\\\"btn-group\\\" dropdown style=\\\"width: 100%;\\\">\\r\\n                  <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-ghost-primary dropdown-toggle\\\">\\r\\n                    Sort by <span class=\\\"caret\\\"></span>\\r\\n                  </button>\\r\\n                  <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n                    <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item sortOption\\\" (click)=\\\"sortBy('cost', 'asc')\\\">MRP : Low to High</a></li>\\r\\n                    <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item sortOption\\\" (click)=\\\"sortBy('cost', 'desc')\\\">MRP : High to Low</a></li>\\r\\n                    <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item sortOption\\\" (click)=\\\"sortBy('offer', 'asc')\\\">Offer : Low to High</a></li>\\r\\n                    <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item sortOption\\\" (click)=\\\"sortBy('offer', 'desc')\\\">Offer : High to Low</a></li>\\r\\n                    <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item sortOption\\\" (click)=\\\"sortBy('lastmodified', 'desc')\\\">Last modified Date (desc)</a></li>\\r\\n                    <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item sortOption\\\" (click)=\\\"clearSort()\\\">Clear Sort</a></li>\\r\\n                    <!-- <li class=\\\"divider dropdown-divider\\\"></li> -->\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </td>\\r\\n              <td>\\r\\n                <mat-paginator style=\\\"margin-block-start: -0.5rem; margin-left: -13rem !important;\\\" [length]=\\\"totalRecords\\\"\\r\\n                [pageSize]=\\\"pageSize\\\"\\r\\n                [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n                (page)=\\\"action($event)\\\">\\r\\n                </mat-paginator>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- collapse content -->\\r\\n    <!-- <p>\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\">\\r\\n        Button with data-target\\r\\n      </button>\\r\\n    </p>\\r\\n    <div [collapse]=\\\"isCollapsed\\\">\\r\\n      <div class=\\\"card card-body\\\">\\r\\n\\r\\n      </div>\\r\\n    </div> -->\\r\\n\\r\\n\\r\\n  </div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-3 col-sm-4\\\" *ngFor=\\\"let prod of products\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <ngx-loading [show]=\\\"loading\\\"></ngx-loading>\\r\\n       <!-- <carousel [interval]=\\\"false\\\">\\r\\n        <slide *ngFor=\\\"let slide of homeImages\\\">\\r\\n          <label>Media-ID -> {{slide.mediaId}}</label>\\r\\n          <img src={{slide.image}} alt=\\\"slides\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n          <div class=\\\"carousel-caption d-none d-md-block\\\" style=\\\"color: black;\\\">\\r\\n            <h3>{{slide.title}}</h3>\\r\\n            <p>{{slide.description}}</p>\\r\\n          </div>\\r\\n        </slide>\\r\\n      </carousel> -->\\r\\n      <div class=\\\"card-body text-center\\\">\\r\\n        <div class=\\\"text-muted small text-uppercase font-weight-bold\\\">MRP - {{prod.cost}}<small> ₹ </small> | Discount - {{prod.offer}}%</div>\\r\\n        <div class=\\\"h2 py-3\\\">{{prod.productName}} - {{prod.productCode}}</div>\\r\\n        <div class=\\\"chart-wrapper mx-auto\\\">\\r\\n          <p>{{prod.brandName}}</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n\";","import {\r\n  AfterViewChecked,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  Output,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nimport {\r\n  AnimationBuilder,\r\n  AnimationFactory,\r\n  AnimationPlayer,\r\n  animate,\r\n  style } from '@angular/animations';\r\n\r\n@Directive({\r\n  selector: '[collapse]',\r\n  exportAs: 'bs-collapse',\r\n  host: {\r\n    '[class.ngx-collapse]': 'true'\r\n  }\r\n})\r\nexport class CollapseDirective implements AfterViewChecked {\r\n  /** This event fires as soon as content collapses */\r\n  @Output() collapsed: EventEmitter<any> = new EventEmitter();\r\n  /** This event fires as soon as content becomes visible */\r\n  @Output() expanded: EventEmitter<any> = new EventEmitter();\r\n\r\n  @HostBinding('style.display') display: string;\r\n  // shown\r\n  @HostBinding('class.in')\r\n  @HostBinding('class.ngx-show')\r\n  @HostBinding('attr.aria-expanded')\r\n  _collapse = true;\r\n  // hidden\r\n  @HostBinding('attr.aria-hidden') isCollapsed = false;\r\n  // stale state\r\n  @HostBinding('class.ngx-collapse') isCollapse = true;\r\n  // animation state\r\n  @HostBinding('class.ngx-collapsing') isCollapsing = false;\r\n\r\n  /** A flag indicating visibility of content (shown or hidden) */\r\n  @Input()\r\n  set collapse(value: boolean) {\r\n    this._collapse = value;\r\n    if (this._collapse) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  get collapse(): boolean {\r\n    return this._collapse;\r\n  }\r\n\r\n  public isViewChecked: boolean = false;\r\n\r\n  private _animation: AnimationFactory;\r\n  private _animationPlayer: AnimationPlayer;\r\n\r\n  constructor(private _el: ElementRef, private _renderer: Renderer2, private _builder: AnimationBuilder) {\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.isViewChecked = true;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n\r\n  /** allows to manually toggle content visibility */\r\n  public toggle(): void {\r\n    if (this._collapse) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  /** allows to manually hide content */\r\n  public hide(): void {\r\n    if (!this.isViewChecked) {\r\n      this._renderer.setStyle(this._el.nativeElement, 'display', 'none');\r\n      this._renderer.setStyle(this._el.nativeElement, 'overflow', 'hidden');\r\n      this._renderer.setStyle(this._el.nativeElement, 'position', 'relative');\r\n      this._renderer.setStyle(this._el.nativeElement, 'height', '0');\r\n      return;\r\n    } else {\r\n      this._renderer.removeStyle(this._el.nativeElement, 'overflow');\r\n      this._renderer.removeStyle(this._el.nativeElement, 'position');\r\n      this._renderer.removeStyle(this._el.nativeElement, 'height');\r\n      this._renderer.removeStyle(this._el.nativeElement, 'display');\r\n    }\r\n\r\n    if (this._animationPlayer) {\r\n      this._animationPlayer.finish()\r\n      this._animationPlayer.destroy()\r\n    }\r\n\r\n    this._animation = this._builder.build([\r\n      style({ overflow: 'hidden', position: 'relative' }),\r\n      animate('0.35s ease', style({ height: '0' }))\r\n    ]);\r\n\r\n    this._animationPlayer = this._animation.create(this._el.nativeElement);\r\n\r\n    this._animationPlayer.onStart = () => {\r\n      this.isCollapse = false;\r\n      this.isCollapsing = true;\r\n    }\r\n    this._animationPlayer.onDone = () => {\r\n      this._collapse = true;\r\n      this.isCollapsed = true;\r\n\r\n      this.isCollapse = true;\r\n      this.isCollapsing = false;\r\n\r\n      this.display = 'none';\r\n      this.collapsed.emit(this);\r\n    }\r\n\r\n    this._animationPlayer.play();\r\n  }\r\n\r\n  /** allows to manually show collapsed content */\r\n  public show(): void {\r\n    if (!this.isViewChecked) {\r\n      this._renderer.setStyle(this._el.nativeElement, 'display', 'block');\r\n      this._renderer.setStyle(this._el.nativeElement, 'overflow', 'hidden');\r\n      this._renderer.setStyle(this._el.nativeElement, 'position', 'relative');\r\n      this._renderer.removeStyle(this._el.nativeElement, 'height');\r\n      return;\r\n    } else {\r\n      this._renderer.removeStyle(this._el.nativeElement, 'overflow');\r\n      this._renderer.removeStyle(this._el.nativeElement, 'position');\r\n      this._renderer.removeStyle(this._el.nativeElement, 'height');\r\n      this._renderer.removeStyle(this._el.nativeElement, 'display');\r\n    }\r\n\r\n    if (this._animationPlayer) {\r\n      this._animationPlayer.finish()\r\n      this._animationPlayer.destroy()\r\n    }\r\n\r\n    this._animation = this._builder.build([\r\n      style({ overflow: 'hidden', display: 'block', position: 'relative', height: 0 }),\r\n      animate('0.35s ease', style({ height: '*' }))\r\n    ]);\r\n\r\n    this._animationPlayer = this._animation.create(this._el.nativeElement);\r\n\r\n    this._animationPlayer.onStart = () => {\r\n      this.isCollapse = false;\r\n      this.isCollapsing = true;\r\n    }\r\n    this._animationPlayer.onDone = () => {\r\n      this._collapse = false;\r\n      this.isCollapsed = false;\r\n\r\n      this.isCollapse = true;\r\n      this.isCollapsing = false;\r\n\r\n      this.display = 'block';\r\n      this.expanded.emit(this);\r\n    }\r\n\r\n    this._animationPlayer.play();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CollapseDirective } from './collapse.directive';\r\n\r\n@NgModule({\r\n  declarations: [CollapseDirective],\r\n  exports: [CollapseDirective]\r\n})\r\nexport class CollapseModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return { ngModule: CollapseModule, providers: [] };\r\n  }\r\n}\r\n","export { CollapseDirective } from './collapse.directive';\r\nexport { CollapseModule } from './collapse.module';\r\n","export default \".mat-form-field {\\r\\n  margin-right: 4px;\\r\\n}\\r\\n\\r\\n.icon-paddding {\\r\\n  padding-bottom: 35px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.icon-paddding:hover{\\r\\n  color: cornflowerblue;\\r\\n}\\r\\n\\r\\n.dropButton {\\r\\n  background: transparent;\\r\\n  border-color: transparent;\\r\\n}\\r\\n\\r\\n.dropButton:focus {\\r\\n  outline: 0px dotted;\\r\\n  border-color: transparent;\\r\\n}\\r\\n\\r\\n.addButton {\\r\\n  background: transparent;\\r\\n  border-color: transparent;\\r\\n}\\r\\n\\r\\n.addButton:focus {\\r\\n  outline: 0px dotted;\\r\\n  border-color: transparent;\\r\\n}\\r\\n\\r\\n.warningmsg{\\r\\n  font-size: xx-small;\\r\\n  color: orange;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcHJvZHVjdC9jYXRlZ29yeS9jYXRlZ29yeS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2Qix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGFBQWE7QUFDZiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb2R1Y3QvY2F0ZWdvcnkvY2F0ZWdvcnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XHJcbn1cclxuXHJcbi5pY29uLXBhZGRkaW5nIHtcclxuICBwYWRkaW5nLWJvdHRvbTogMzVweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5pY29uLXBhZGRkaW5nOmhvdmVye1xyXG4gIGNvbG9yOiBjb3JuZmxvd2VyYmx1ZTtcclxufVxyXG5cclxuLmRyb3BCdXR0b24ge1xyXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5kcm9wQnV0dG9uOmZvY3VzIHtcclxuICBvdXRsaW5lOiAwcHggZG90dGVkO1xyXG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5hZGRCdXR0b24ge1xyXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5hZGRCdXR0b246Zm9jdXMge1xyXG4gIG91dGxpbmU6IDBweCBkb3R0ZWQ7XHJcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuLndhcm5pbmdtc2d7XHJcbiAgZm9udC1zaXplOiB4eC1zbWFsbDtcclxuICBjb2xvcjogb3JhbmdlO1xyXG59XHJcbiJdfQ== */\";","import {SelectionModel} from '@angular/cdk/collections';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport { ProductService } from '../../../shared/product/product.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n/**\r\n * Node for category\r\n */\r\nexport class ItemNode {\r\n  children: ItemNode[];\r\n  item: string;\r\n  catId: number;\r\n  catName: string;\r\n}\r\n\r\n/** Flat category item node with expandable and level information */\r\nexport class ItemFlatNode {\r\n  item: string;\r\n  catId: number;\r\n  catName: string;\r\n  level: number;\r\n  expandable: boolean;\r\n}\r\n\r\n/**\r\n * The Json object for to-do list data.\r\n */\r\nlet TREE_DATA = {\r\n\r\n};\r\n\r\n\r\n/**\r\n * build a tree structured Json object.\r\n * Each node in Json object represents a category.\r\n * If a node is a category, it has children items and new items can be added under the category.\r\n */\r\n@Injectable()\r\nexport class nodeService {\r\n  dataChange = new BehaviorSubject<ItemNode[]>([]);\r\n\r\n  get data(): ItemNode[] { return this.dataChange.value; }\r\n\r\n  constructor(private productService: ProductService, private _snackBar: MatSnackBar) {\r\n    this.productService.getCategories()\r\n                        .subscribe((resp:any)=> {\r\n                          if(resp.statusCode === 200){\r\n                            TREE_DATA = resp.data;\r\n                            this.initialize();\r\n                          }\r\n                          else{\r\n                            this._snackBar.open('Error : ' + resp.errorMessages, '', {\r\n                              duration: 3000,\r\n                              panelClass: ['error-snackbar']\r\n                            });\r\n                          }\r\n                        },\r\n                        (error:any) => {\r\n                          this._snackBar.open('Something went wrong!', '', {\r\n                            duration: 3000,\r\n                            panelClass: ['error-snackbar']\r\n                          });\r\n                        })\r\n  }\r\n\r\n  initialize() {\r\n    // Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(TREE_DATA, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `ItemNode`.\r\n   */\r\n  buildFileTree(obj: {[key: string]: any}, level: number): ItemNode[] {\r\n    return Object.keys(obj).reduce<ItemNode[]>((accumulator, key) => {\r\n      const value = obj[key];\r\n      const node = new ItemNode();\r\n      node.item = key;\r\n      node.catId = parseInt(key.split(\",\")[0]);\r\n      node.catName = key.split(\",\")[1];\r\n      if (value != null) {\r\n        if (typeof value === 'object') {\r\n          node.children = this.buildFileTree(value, level + 1);\r\n        } else {\r\n          node.item = value;\r\n          node.catId = parseInt(key.split(\",\")[0]);\r\n          node.catName = key.split(\",\")[1];\r\n        }\r\n      }\r\n\r\n      return accumulator.concat(node);\r\n    }, []);\r\n  }\r\n\r\n  /** Add an item to list */\r\n  insertItem(parent: ItemNode, name: string) {\r\n    if (parent.children) {\r\n      parent.children.push({item: name} as ItemNode);\r\n      this.dataChange.next(this.data);\r\n    }\r\n  }\r\n\r\n  updateItem(node: ItemNode, name: string) {\r\n    node.item = name;\r\n    this.dataChange.next(this.data);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.css'],\r\n  providers: [nodeService]\r\n})\r\nexport class CategoryComponent implements OnInit {\r\n\r\n  loading = false;\r\n  catName: string;\r\n  parentId: number;\r\n\r\n  editCatId: number;\r\n  editCatName: string;\r\n\r\n  addNewItemParent: any;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n  flatNodeMap = new Map<ItemFlatNode, ItemNode>();\r\n\r\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n  nestedNodeMap = new Map<ItemNode, ItemFlatNode>();\r\n\r\n  /** A selected parent node to be inserted */\r\n  selectedParent: ItemFlatNode | null = null;\r\n\r\n  /** The new item's name */\r\n  newItemName = '';\r\n\r\n  treeControl: FlatTreeControl<ItemFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<ItemNode, ItemFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<ItemNode, ItemFlatNode>;\r\n\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<ItemFlatNode>(true /* multiple */);\r\n\r\n  constructor(private nodeService: nodeService, private productService: ProductService,\r\n              private _snackBar: MatSnackBar) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n      this.isExpandable, this.getChildren);\r\n    this.treeControl = new FlatTreeControl<ItemFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n    nodeService.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n  }\r\n\r\n  getLevel = (node: ItemFlatNode) => node.level;\r\n\r\n  isExpandable = (node: ItemFlatNode) => node.expandable;\r\n\r\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\r\n\r\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\r\n\r\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\r\n\r\n  /**\r\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n   */\r\n  transformer = (node: ItemNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.item === node.item\r\n        ? existingNode\r\n        : new ItemFlatNode();\r\n    flatNode.item = node.item;\r\n    flatNode.catId = node.catId;\r\n    flatNode.catName = node.catName;\r\n    flatNode.level = level;\r\n    flatNode.expandable = true;//(node.children != undefined && node.children.length) > 0 ? true : false;\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected. */\r\n  descendantsAllSelected(node: ItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    return descAllSelected;\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: ItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the item selection. Select/deselect all the descendants node */\r\n  ItemSelectionToggle(node: ItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n\r\n    // Force update for the parent\r\n    descendants.forEach(child => this.checklistSelection.isSelected(child));\r\n    this.checkAllParentsSelection(node);\r\n  }\r\n\r\n  /** Toggle a leaf item selection. Check all the parents to see if they changed */\r\n  LeafItemSelectionToggle(node: ItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    this.checkAllParentsSelection(node);\r\n  }\r\n\r\n  /* Checks all the parents when a leaf node is selected/unselected */\r\n  checkAllParentsSelection(node: ItemFlatNode): void {\r\n    let parent: ItemFlatNode | null = this.getParentNode(node);\r\n    while (parent) {\r\n      this.checkRootNodeSelection(parent);\r\n      parent = this.getParentNode(parent);\r\n    }\r\n  }\r\n\r\n  /** Check root node checked state and change it accordingly */\r\n  checkRootNodeSelection(node: ItemFlatNode): void {\r\n    const nodeSelected = this.checklistSelection.isSelected(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    if (nodeSelected && !descAllSelected) {\r\n      this.checklistSelection.deselect(node);\r\n    } else if (!nodeSelected && descAllSelected) {\r\n      this.checklistSelection.select(node);\r\n    }\r\n  }\r\n\r\n  /* Get the parent node of a node */\r\n  getParentNode(node: ItemFlatNode): ItemFlatNode | null {\r\n    const currentLevel = this.getLevel(node);\r\n\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n\r\n      if (this.getLevel(currentNode) < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Select the category so we can insert the new item. */\r\n  addNewItem(node: ItemFlatNode) {\r\n    // node.expandable = true;\r\n    const parentNode = this.flatNodeMap.get(node);\r\n    if(parentNode.children === undefined || parentNode.children === null || parentNode.children.length <= 0)\r\n    {\r\n      parentNode.children = new Array();\r\n    }\r\n\r\n    this.addNewItemParent = parentNode;\r\n    this.nodeService.insertItem(parentNode!, '');\r\n    this.treeControl.expand(node);\r\n\r\n  }\r\n\r\n  /** Save the node to database */\r\n  saveNode(node: ItemFlatNode, itemValue: string) {\r\n    const nestedNode = this.flatNodeMap.get(node);\r\n    this.nodeService.updateItem(nestedNode!, itemValue);\r\n\r\n    this.catName = itemValue;\r\n    this.parentId = this.addNewItemParent.catId;\r\n    this.createCategory();\r\n  }\r\n\r\n  showExpand(node: ItemFlatNode){\r\n    const flatNode = this.flatNodeMap.get(node);\r\n    if(flatNode === undefined || flatNode.children === undefined || flatNode.children === null){\r\n      return 'hidden';\r\n    }\r\n    else if(flatNode.children.length > 0)\r\n    {\r\n      return 'visible';\r\n    }\r\n    else{\r\n      return 'hidden';\r\n    }\r\n  }\r\n\r\n  deleteCategory(){\r\n    this.loading = true;\r\n    let deleteCategories:number[] = new Array();\r\n    this.checklistSelection.selected.forEach(node => {\r\n      deleteCategories.push(node.catId);\r\n    });\r\n    this.productService.deleteCategory(deleteCategories)\r\n                        .subscribe((resp:any)=> {\r\n                          if(resp.statusCode === 200){\r\n                            TREE_DATA = resp.data != null ? resp.data : {};\r\n                            this.nodeService.initialize();\r\n                            this._snackBar.open('Category Deleted Successfully', '', {\r\n                              duration: 3000,\r\n                              panelClass: ['warn-snackbar']\r\n                            });\r\n                          }\r\n                          else{\r\n                            this._snackBar.open('Error : ' + resp.errorMessages, '', {\r\n                              duration: 3000,\r\n                              panelClass: ['error-snackbar']\r\n                            });\r\n                          }\r\n                          this.loading = false;\r\n                        },\r\n                        (error:any) => {\r\n                          this._snackBar.open('Something went wrong !', '', {\r\n                            duration: 3000,\r\n                            panelClass: ['error-snackbar']\r\n                          });\r\n                        })\r\n  }\r\n\r\n  createCategory(){\r\n    this.loading = true;\r\n    this.productService.createCategory(this.catName, this.parentId)\r\n                        .subscribe((resp:any)=> {\r\n                          if(resp.statusCode === 200){\r\n                            TREE_DATA = resp.data;\r\n                            this.nodeService.initialize();\r\n                            this._snackBar.open('Category Added Successfully', '', {\r\n                              duration: 3000,\r\n                              panelClass: ['success-snackbar']\r\n                            });\r\n                          }\r\n                          else{\r\n                            this._snackBar.open('Error : ' + resp.errorMessages, '', {\r\n                              duration: 3000,\r\n                              panelClass: ['error-snackbar']\r\n                            });\r\n                          }\r\n                          this.loading = false;\r\n                        },\r\n                        (error:any) => {\r\n                          this._snackBar.open('Something went wrong !', '', {\r\n                            duration: 3000,\r\n                            panelClass: ['error-snackbar']\r\n                          });\r\n                        })\r\n\r\n  }\r\n\r\n  editCategory(){\r\n    this.loading = true;\r\n    this.productService.editCategoryName(this.editCatId, this.editCatName)\r\n                        .subscribe((resp:any)=> {\r\n                          if(resp.statusCode === 200){\r\n                            TREE_DATA = resp.data;\r\n                            this.nodeService.initialize();\r\n                            this._snackBar.open('Category Modified Successfully', '', {\r\n                              duration: 3000,\r\n                              panelClass: ['success-snackbar']\r\n                            });\r\n                          }\r\n                          else{\r\n                            this._snackBar.open('Error : ' + resp.errorMessages, '', {\r\n                              duration: 3000,\r\n                              panelClass: ['error-snackbar']\r\n                            });\r\n                          }\r\n                          this.loading = false;\r\n                        },\r\n                        (error:any) => {\r\n                          this._snackBar.open('Something went wrong !', '', {\r\n                            duration: 3000,\r\n                            panelClass: ['error-snackbar']\r\n                          });\r\n                        })\r\n  }\r\n\r\n}\r\n","export default \".matitem{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.profileImg{\\r\\n  height: 100px;\\r\\n  width: inherit;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcHJvZHVjdC9tYW5hZ2UtcHJvZHVjdHMvbWFuYWdlLXByb2R1Y3QvbWFuYWdlLXByb2R1Y3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvcHJvZHVjdC9tYW5hZ2UtcHJvZHVjdHMvbWFuYWdlLXByb2R1Y3QvbWFuYWdlLXByb2R1Y3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXRpdGVte1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ucHJvZmlsZUltZ3tcclxuICBoZWlnaHQ6IDEwMHB4O1xyXG4gIHdpZHRoOiBpbmhlcml0O1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductService } from '../../../../shared/product/product.service';\r\nimport { AlertService } from '../../../../shared/_alert';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-manage-product',\r\n  templateUrl: './manage-product.component.html',\r\n  styleUrls: ['./manage-product.component.css']\r\n})\r\nexport class ManageProductComponent implements OnInit {\r\n\r\n  loading = false;\r\n\r\n  categoryId: string;\r\n  pName: string;\r\n  brand: string;\r\n  cost: number;\r\n  offer: number;\r\n  pDescription: string;\r\n  productActive: boolean = true;\r\n  fileToUpdate: File;\r\n  productPic: string;\r\n  searchCategory: string;\r\n  pCode: string;\r\n  unitsInStock : number;\r\n\r\n  defaultAvatar = \"assets/img/avatars/Blank-Profile.png\";\r\n\r\n  searchCatId: number;\r\n    //autoComplete\r\n    myControl = new FormControl('', [\r\n      Validators.required\r\n    ]);\r\n    options: any[];\r\n    filteredOptions: Observable<any[]>;\r\n\r\n  constructor(private sanitizer: DomSanitizer, private productService: ProductService,\r\n              private alertService: AlertService) {\r\n    this.loading = true;\r\n    this.productService.getCategoriesForTypeahead()\r\n                        .subscribe((resp:any) => {\r\n                          if(resp.statusCode  === 200){\r\n                            this.options = resp.dataList;\r\n                            this.filteredOptions = this.myControl.valueChanges.pipe(\r\n                              startWith(''),\r\n                              map(value => this._filter(value))\r\n                            );\r\n                          }\r\n                          else{\r\n                            this.alertService.error('Failed : ' + resp.errorMessages);\r\n                          }\r\n                          this.loading = false;\r\n                        },\r\n                        (error:any) => {\r\n                          this.alertService.error(\"something went wrong!\");\r\n                          this.loading = false;\r\n                        });\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    if(value === \"\")\r\n    {\r\n      return;\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    return this.options.filter(option =>\r\n      (option.categoryName.toLowerCase().indexOf(filterValue) === 0 || (option.categoryId+\"\").toLowerCase().indexOf(filterValue) === 0));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleProductActive(){\r\n    this.productActive = !this.productActive;\r\n  }\r\n\r\n  handleFileUpdate(files: FileList) {\r\n    this.productPic = URL.createObjectURL(files.item(0));\r\n    if (this.isValidFile(files.item(0).name)) {\r\n      this.fileToUpdate = files.item(0);\r\n    }\r\n    else{\r\n      alert('Format not supported! Please upload jpeg/jpg/png file');\r\n    }\r\n  }\r\n\r\n  isValidFile(name: String) {\r\n    var ext = name.substring(name.lastIndexOf('.') + 1);\r\n    if (ext.toLowerCase() == 'png' || ext.toLowerCase() == 'jpeg' || ext.toLowerCase() == 'jpg') {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n  }\r\n\r\n  checkImage(image){\r\n    if(image === undefined || image === null){\r\n      return this.defaultAvatar;\r\n    }\r\n    else{\r\n      return this.sanitizer.bypassSecurityTrustUrl(image);;\r\n    }\r\n  }\r\n\r\n  setCategory(cat: any){\r\n    this.searchCatId = cat.categoryId;\r\n    this.searchCategory = \"\"+this.searchCatId;\r\n  }\r\n\r\n  createProduct(){\r\n    this.loading = true;\r\n    this.productService.createOrUpdateProduct(this.fileToUpdate, this.searchCategory, null, this.pName,\r\n                        this.brand, this.cost, this.offer, this.pDescription, this.productActive, this.pCode,\r\n                        this.unitsInStock)\r\n                        .subscribe((resp:any) => {\r\n                          if(resp.statusCode  === 200){\r\n                            this.alertService.success('Product created succesfully');\r\n                          }\r\n                          else{\r\n                            this.alertService.error('Failed : ' + resp.errorMessages);\r\n                          }\r\n                          this.loading = false;\r\n                        },\r\n                        (error:any) => {\r\n                          this.alertService.error(\"something went wrong!\");\r\n                          this.loading = false;\r\n                        });\r\n  }\r\n\r\n}\r\n","export default \".filterbar{\\r\\n  margin-bottom: -1.5rem;\\r\\n  margin-top: -1rem;\\r\\n}\\r\\n\\r\\n.table th, .table td {\\r\\n  border-top: 0px !important;\\r\\n}\\r\\n\\r\\n.mat-paginator-container{\\r\\n  justify-content: end;\\r\\n  margin-right: -12rem;\\r\\n}\\r\\n\\r\\n.mat-paginator-outer-container{\\r\\n  margin-left: -13rem !important;\\r\\n}\\r\\n\\r\\n.sortOption{\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcHJvZHVjdC9wcm9kdWN0LWxpc3QvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0I7RUFDdEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLG9CQUFvQjtBQUN0Qjs7QUFDQTtFQUNFLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wcm9kdWN0L3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWx0ZXJiYXJ7XHJcbiAgbWFyZ2luLWJvdHRvbTogLTEuNXJlbTtcclxuICBtYXJnaW4tdG9wOiAtMXJlbTtcclxufVxyXG5cclxuLnRhYmxlIHRoLCAudGFibGUgdGQge1xyXG4gIGJvcmRlci10b3A6IDBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubWF0LXBhZ2luYXRvci1jb250YWluZXJ7XHJcbiAganVzdGlmeS1jb250ZW50OiBlbmQ7XHJcbiAgbWFyZ2luLXJpZ2h0OiAtMTJyZW07XHJcbn1cclxuLm1hdC1wYWdpbmF0b3Itb3V0ZXItY29udGFpbmVye1xyXG4gIG1hcmdpbi1sZWZ0OiAtMTNyZW0gIWltcG9ydGFudDtcclxufVxyXG5cclxuLnNvcnRPcHRpb257XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { ProductService } from '../../../shared/product/product.service';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n\r\n  loading = false;\r\n  filterloading = false;\r\n  products:any[] = new Array();\r\n  categories:any[] = new Array();\r\n  pIds:any[] = new Array();\r\n  cIds:any[] = new Array();\r\n\r\n  isCollapsed: boolean = false;\r\n  searchByProduts: boolean = false;\r\n\r\n  loadActiveItemsOnly: boolean = true;\r\n\r\n  sortField: string;\r\n  sortType: string;\r\n\r\n  toggleFilterCollapse(){\r\n    this.isCollapsed = !this.isCollapsed;\r\n  }\r\n\r\n   // MatPaginator Inputs\r\n   offset = 0;\r\n   totalRecords = 100;\r\n   pageSize = 25;\r\n   pageSizeOptions: number[] = [25, 50, 75];\r\n   // MatPaginator Output\r\n   pageEvent: PageEvent;\r\n\r\n  myForm:FormGroup;\r\n        disabled = false;\r\n        ShowFilter = false;\r\n        limitSelection = false;\r\n        selectedItems: any = [];\r\n        dropdownSettings: any = {};\r\n\r\n  constructor(private productService: ProductService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.filterloading = true;\r\n    this.productService.getCategoriesForTypeahead()\r\n                        .subscribe((resp:any) => {\r\n                          if(resp.statusCode === 200){\r\n                            this.categories = resp.dataList;\r\n                          }\r\n                          else{\r\n                            alert(\"failed\")\r\n                          }\r\n                          this.filterloading = false;\r\n                        },\r\n                        (error:any) => {\r\n                          alert(\"error\");\r\n                        });\r\n\r\n    this.setProducts();\r\n\r\n    this.dropdownSettings = {\r\n        singleSelection: false,\r\n        idField: 'categoryId',\r\n        textField: 'categoryName',\r\n        selectAllText: 'Select All Category',\r\n        unSelectAllText: 'UnSelect All Category',\r\n        itemsShowLimit: 2,\r\n        allowSearchFilter: true\r\n    };\r\n    this.myForm = this.fb.group({\r\n        category: [this.selectedItems]\r\n    });\r\n  }\r\n\r\n  setProducts(){\r\n    this.loading = true;\r\n    this.setProductCount();\r\n    this.productService.getProducts(this.pIds, this.cIds, this.offset, this.pageSize,\r\n                                    this.sortField, this.sortType, this.loadActiveItemsOnly)\r\n                        .subscribe((resp:any) => {\r\n                          if(resp.statusCode === 200){\r\n                            this.products = resp.dataList;\r\n                          }\r\n                          else{\r\n                            alert(\"failed\")\r\n                          }\r\n                          this.loading = false;\r\n                        },\r\n                        (error:any) => {\r\n                          alert(\"error\");\r\n                        });\r\n  }\r\n\r\n  setProductCount(){\r\n    this.productService.getproductCount(this.cIds)\r\n                      .subscribe((resp:any) => {\r\n                        if(resp.statusCode === 200){\r\n                          this.totalRecords = resp.data.productCount;\r\n                        }\r\n                        else{\r\n                          alert(\"failed\")\r\n                        }\r\n                      },\r\n                      (error:any) => {\r\n                        alert(\"error\");\r\n                      });\r\n  }\r\n\r\n  loadActiveItems(){\r\n    this.setProducts();\r\n  }\r\n\r\n  sortBy(sortField:string, sortType: string){\r\n    this.sortType = sortType;\r\n    this.sortField = sortField;\r\n    this.setProducts();\r\n  }\r\n\r\n  clearSort(){\r\n    this.sortType = null;\r\n    this.sortField = null;\r\n    this.setProducts();\r\n  }\r\n\r\n  onItemSelect(item: any) {\r\n      if(!this.cIds.includes(item.categoryId)){\r\n        this.cIds.push(item.categoryId);\r\n      }\r\n      this.setProducts();\r\n  }\r\n  onDeSelect(item: any){\r\n    if(this.cIds.includes(item.categoryId)){\r\n      let index = this.cIds.indexOf(item.categoryId);\r\n      this.cIds.splice(index, 1);\r\n    }\r\n    this.setProducts();\r\n  }\r\n  onDeSelectAll(){\r\n    this.cIds.length = 0;\r\n    this.setProducts();\r\n  }\r\n  onSelectAll(items: any) {\r\n      console.log('onSelectAll', items);\r\n      items.forEach(item => {\r\n        if(!this.cIds.includes(item.categoryId)){\r\n          this.cIds.push(item.categoryId);\r\n        }\r\n      });\r\n      this.setProducts();\r\n  }\r\n  toogleShowFilter() {\r\n      this.ShowFilter = !this.ShowFilter;\r\n      this.dropdownSettings = Object.assign({}, this.dropdownSettings, { allowSearchFilter: this.ShowFilter });\r\n  }\r\n\r\n  handleLimitSelection() {\r\n      if (this.limitSelection) {\r\n          this.dropdownSettings = Object.assign({}, this.dropdownSettings, { limitSelection: 2 });\r\n      } else {\r\n          this.dropdownSettings = Object.assign({}, this.dropdownSettings, { limitSelection: null });\r\n      }\r\n  }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n    }\r\n  }\r\n\r\n  action(event){\r\n    this.pageSize = event.pageSize;\r\n    let pageIndex:number = event.pageIndex;\r\n    this.offset = pageIndex * this.pageSize;\r\n    this.setProducts();\r\n  }\r\n\r\n}\r\n","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ManageProductComponent } from './manage-products/manage-product/manage-product.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Products'\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'product-list'\r\n      },\r\n      {\r\n        path: 'category',\r\n        component: CategoryComponent,\r\n        data: {\r\n          title: 'Manage Category'\r\n        }\r\n      },\r\n      {\r\n        path: 'product-list',\r\n        component: ProductListComponent,\r\n        data: {\r\n          title: 'Products List'\r\n        }\r\n      },\r\n      {\r\n        path: 'manage-product',\r\n        component: ManageProductComponent,\r\n        data: {\r\n          title: 'Products Management'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { AlertModule } from '../../shared/_alert/alert.module';\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { CollapseModule } from '../../shared/collapse';\r\n// Material modules\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { ProductRoutingModule } from './product-routing.module';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ManageProductComponent } from './manage-products/manage-product/manage-product.component';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CategoryComponent,\r\n    ProductListComponent,\r\n    ManageProductComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ChartsModule,\r\n    BsDropdownModule,\r\n    ButtonsModule.forRoot(),\r\n    ProductRoutingModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.rectangleBounce,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.3)',\r\n      backdropBorderRadius: '4px',\r\n      primaryColour: 'cornflowerblue',\r\n      secondaryColour: 'chocolate',\r\n      tertiaryColour: 'darkred'\r\n    }),\r\n    SharedModule,\r\n    AlertModule,\r\n    CarouselModule,\r\n    CollapseModule,\r\n    NgMultiSelectDropDownModule.forRoot()\r\n  ]\r\n})\r\nexport class ProductModule { }\r\n"],"sourceRoot":"webpack:///"}